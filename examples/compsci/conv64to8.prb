tags:
    - C
    - interview

par_time: 00:15:00

short_desc: Convert 64-bit to 8-bit array

question:
    Write a function in C that takes a 64-bit number and converts it
    to an array of 8-bit numbers.

    \vspace*{8in}

answer: |-

    \begin{lstlisting}
    #include <stdio.h>
    #include <stdint.h>

    void conv64to8(uint64_t in, uint8_t out[8])
    {
        int i;

        for (i = 0; i < 8; i++) {
            out[i] = (uint8_t) in;
            in = in >> 8;
        }
    }

    int main()
    {
        uint64_t in = 0x1FEDCBA987654321;
        uint8_t out[8];
        int i;

        printf("in = %llX\n", in);

        conv64to8(in, out);

        for (i = 0; i < 8; i++) {
            printf("out[%i] = %X\n", i, out[i]);
        }
    }
    \end{lstlisting}

    A minimum answer would be the function by itself.
    Adding a main section for a complete program that can be
    used to test the function is a good addition.
    Being able to recall the required header files for uint types
    and printf is also a good sign.

author: Jeremiah Mahler <jmmahler@gmail.com>

# vim:syntax=yaml
