tags:
    - C
    - system programming
    - Computer Science
    - interview

time: "00:15:00"

short_desc: Function to find the first 100 prime numbers.

question: |-

    Write a C program to find the first 100 prime numbers.
    
    \vspace*{8in}

answer: |-
    First, recall what a prime number is.
    It is a number greater than 1 that is only divisible by one and itself.\\
    2, 3, 5, 7, 11, 13, 17, ...

    \begin{lstlisting}
    #include <stdio.h>
    #include <stdlib.h>

    int is_prime(int p)
    {
        int i;

        if (p < 2)
            return 0;

        for (i = 2; i < p; i++) {
            if (p % i == 0)
                return 0;
        }

        return 1;
    }

    int main(int argc, char *argv[])
    {
        int n;
        int p;

        if (argc > 1)
            n = atoi(argv[1]);
        else
            n = 100;

        p = 2;
        while (n > 0) {

            if (is_prime(p)) {
                printf("%i\n", p);
                n--;
            }

            p++;
        }

        return 0;
    }
    \end{lstlisting}

    First, a loop is needed that will test prime numbers and
    will continue until $n$ are found.
    This is shown by lines 29 through 38 where $n$ is the
    number found and $p$ is the prime number under test.

    This program takes $n$ as an argument or defaults to $100$
    (lines 24 through 27).
    A fixed value for $n$ is acceptable, but being able to specify
    it on the command line makes it easier to test.

    Next, a function to test whether a number is prime or not is
    created (lines 4 through 17).
    It just uses a brute force method and tries to see if any divisor
    between $2$ and $p - 1$ divides in evenly, in which case it would
    not be a prime.

author: Jeremiah Mahler <jmmahler@gmail.com>

# vim:syntax=yaml
