#!/usr/bin/env python3

import argparse
import os
import pystache
import sys
import yaml

ap = argparse.ArgumentParser(description='Quiz Maker')
ap.add_argument('-c', dest='test_config_file',
                help='test config file')
ap.add_argument('-t', dest='test_template_file', required=True,
                help='test template file')
ap.add_argument('-p', dest='problem_files', action='append',
                help='problem files')
ap.add_argument('-a', dest='answers', action='store_true',
                help='include answers in the output?')

args = ap.parse_args()

test_template = None
with open(args.test_template_file) as fd:
    test_template = fd.read()

test_cfg = {
    # defaults
    'title': 'Test',
    'problem_files': [],
    'problems': [],
}
test_dir = None
if args.test_config_file:
    with open(args.test_config_file) as fd:
        test_dir = os.path.dirname(args.test_config_file)
        if not test_dir:
            test_dir = './'
        test_cfg.update(yaml.safe_load(fd.read()))

# Problems may come from the test_cfg and/or as arguments.
# If given as an argument, the path is relative to the current
# directory.  If given in a test, the path is relative to the
# test.

# load problems from test
for problem_file in test_cfg['problem_files']:
    with open(test_dir + "/" + problem_file) as fd:
        test_cfg['problems'].append(yaml.load(fd.read()))

# load problems from arguments
if args.problem_files:
    for problem_file in args.problem_files:
        with open(problem_file) as fd:
            test_cfg['problems'].append(yaml.load(fd.read()))

renderer = pystache.Renderer(escape=lambda u: u) # render w/o escaping

print(renderer.render(test_template, test_cfg))
