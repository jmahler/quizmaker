#!/usr/bin/perl
use strict;

use QuizMaker;

unless (@ARGV) {
my $prog_name = (split /\//, $0)[-1];

print <<"USAGE";

USAGE:
  $prog_name <command> <options>
  
COMMANDS:
  listtags <files>                      # List all unique tags from the files.

  findtags -tag <tag> [-tag <tag> ...] <files>

                                        # Find problems with ALL the tags.
                                        # Tags are separated by spaces.
                                        # Tags with spaces or special
                                        # characters in name should be quoted.

  testtags <test>                       # List the tags the test is
                                        # composed of

USAGE
}

my ($cmd) = shift @ARGV;

# {{{ listtags
if ($cmd eq 'listtags') {
	my %uniq_tags;

	# the rest of the @ARGV's are file names
	# Find all the unique tags from these problems.
	foreach my $file (@ARGV) {
		my $qzm = QuizMaker::Problem->load_file($file);	

		if (! defined $qzm) {
			print STDERR "error loading problem from file '$file', skipping.\n";
			next;
		}

		my @tags = @{$qzm->{tags}};
		map { $uniq_tags{$_} = 1; } @tags;
	}

	# display the unique tags

	print "TAGS:\n";
	foreach my $tag (keys %uniq_tags) {
		print " $tag\n";
	}
}
# }}}

# {{{ findtags
elsif ($cmd eq 'findtags') {
	# tags and files from arguments
	my @req_tags;
	my @files;

	# find the tags from the arguments
	my $i;
	for ($i = 0; $i < @ARGV; $i++) {

		my $arg = $ARGV[$i];

		if ($arg =~ /^-tags?$/) {

			$i++;

			if ($i >= @ARGV) {
				print STDERR "-tag option given without an argument\n";
				exit 1;
			}

			push @req_tags, $ARGV[$i];
		} else {
			# no more -tag arguments
			last;
		}
	}

	if ($i == @ARGV) {
		print STDERR "no problem files given\n";
		exit 1;
	}

	# the remaining arguments are files
	@files = @ARGV[$i .. $#ARGV];

	# Scan the problem files and print the file name if it has
	# all the tags.
	my $one_found = 0;  # flag set if at least one found
	print "FILES:\n";
	foreach my $file (@files) {
		my $qzm = QuizMaker::Problem->load_file($file);	

		if (! defined $qzm) {
			print STDERR "error loading problem from file '$file', skipping.\n";
			next;
		}

		my @tags = @{$qzm->{tags}};

		my $all_found = 1;
		foreach my $req_tag (@req_tags) {
			my $found = 0;  # default not found
			foreach my $tag (@tags) {
				if ($req_tag eq $tag) {
					$found = 1;
					last;
				}
			}
			if (0 == $found) {
				$all_found = 0;
				last;
			}
		}

		if ($all_found) {
			print "  $file\n";
			$one_found = 1;
		}
	}

	if (! $one_found) {
		print "No problems found, for those tags, in the " . @files .
				" files searched.\n";
		print "  Perhaps you should try the 'listtags' command.\n";
		exit 0;
	}
}
# }}}

# {{{ testtags
elsif ($cmd eq 'testtags') {

	my $test_file = shift @ARGV;

	my $qzmt = QuizMaker::Test->load_file($test_file);
	exit 1 if (! $qzmt);

	my @problems = @{$qzmt->{'problems'}};  # problem objects

	my %tag_counts;
	my $total_tags = 0;

	foreach my $problem (@problems) {
		my @tags = @{$problem->{tags}};

		foreach my $tag (@tags) {
			if (exists $tag_counts{$tag}) {
				$tag_counts{$tag} += 1;
			} else {
				$tag_counts{$tag} = 1;
			}
			$total_tags++;
		}
	}

	print "    %      count     tag\n";
	print "  -----    -----     ---\n";
	if ($total_tags > 0) {
		foreach my $tag (keys %tag_counts) {
			my $pcnt = ($tag_counts{$tag} / $total_tags) * 100;
			printf("%7.2f   %5.d", $pcnt, $tag_counts{$tag});
			print "      $tag\n";
		}
	} else {
		print "(0 tags)\n";
	}
} 
# }}}

# {{{ unknown command
else {
	print "unkown command: '$cmd'\n";
}
# }}}

